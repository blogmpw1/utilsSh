#!/bin/bash

SRC=.
MASK=
list=false
type="l"
verbose=false
quiet=false

usage()
{
	echo "usage $0 [-s SRC] [-v] [-q] [-t (l|w|c)] [-l] [-m \"regex\"]"
	echo ""
	echo "    -s SRC : src of start parsing"
	echo "    -v : verbose boolean"
	echo "    -q : quiet boolean (hide error)"
	echo "    -t (l|w|c): count type line/word/char"
	echo "    -l : list file boolean"
	echo "    -m regex : mask of file accepted"
	echo ""
	echo "ex : $0 -s . -m \"\.[ch)]$\" -q"
	exit 0
}


# parse arguments
for arg in $@
do
        case $arg in
                -h)
			usage
                        ;;
		-l)
			list=true
			;;
		-v)
			verbose=true
			;;
		-q)
			quiet=true
			;;
                -*)
                        last=$arg
                        ;;
                *)
                        case $last in
                                -s)
                                        SRC=$arg
                                        ;;
				-m)
					if [ "$MASK" != "" ]; then
						MASK="$MASK|($arg)"
					else
						MASK="($arg)"
					fi
					;;
				-t)
					type=$arg
					;;
                        esac
                        ;;
        esac
done

if [ "$MASK" == "" ]; then
	MASK="(.)"
fi

[ "$type" == "l" ] || [ "$type" == "w" ] || [ "$type" == "c" ] || type="l";

files=$(find $SRC | grep -E "$MASK")

if [ $list == true ]; then
	echo $files
	exit 0
fi

count=0
for file in $files
do
	if [ -d $file ]; then
		continue
	fi

	if [ $quiet == true ]; then
		count=$(( count + $(cat $file 2> /dev/null | wc -$type ) ))
	else
		count=$(( count + $(cat $file | wc -$type) ))
	fi

	if [ $verbose == true ]; then
		echo $count : $file
	fi
done

case $type in
	l)
		echo -e "\e[1;33m$count\e[0m \e[33mlines\e[0m found in $SRC direcotry"
		;;
	w)
		echo -e "\e[1;33m$count\e[0m \e[33mwords\e[0m found in $SRC direcotry"
		;;
	c)
		echo -e "\e[1;33m$count\e[0m \e[33mbytes\e[0m found in $SRC direcotry"
		;;
esac
